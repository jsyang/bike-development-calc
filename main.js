webpackJsonp([0],{12:function(module,exports,__webpack_require__){"use strict";eval('\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nvar sounds_1 = __webpack_require__(54);\r\nvar audioContext = new AudioContext();\r\nvar audioBuffers = {};\r\nfunction defineSound(_a) {\r\n    var name = _a.name, arrayBuffer = _a.arrayBuffer;\r\n    audioContext.decodeAudioData(arrayBuffer)\r\n        .then(function (decodedAudioBuffer) {\r\n        audioBuffers[name] = decodedAudioBuffer;\r\n    });\r\n}\r\nfunction base64ToArrayBuffer(base64) {\r\n    var binary_string = window.atob(base64);\r\n    var len = binary_string.length;\r\n    var bytes = new Uint8Array(len);\r\n    for (var i = 0; i < len; i++) {\r\n        bytes[i] = binary_string.charCodeAt(i);\r\n    }\r\n    return bytes.buffer;\r\n}\r\nObject.keys(sounds_1.default)\r\n    .forEach(function (name) { return defineSound({ name: name, arrayBuffer: base64ToArrayBuffer(sounds_1.default[name]) }); });\r\nfunction playSound(name) {\r\n    var source = audioContext.createBufferSource();\r\n    source.buffer = audioBuffers[name];\r\n    source.connect(audioContext.destination);\r\n    source.start();\r\n}\r\nexports.playSound = playSound;\r\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/audio.ts\n// module id = 12\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/audio.ts?')},13:function(module,exports,__webpack_require__){"use strict";eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar React = __webpack_require__(0);\r\nvar react_dom_1 = __webpack_require__(0);\r\nvar DrivetrainPage_1 = __webpack_require__(4);\r\nvar renderApp = function (App) {\r\n    if (App === void 0) { App = DrivetrainPage_1.default; }\r\n    return react_dom_1.render(React.createElement(App, null), document.getElementById('root'));\r\n};\r\naddEventListener('DOMContentLoaded', function () { return renderApp(); });\r\nif (true) {\r\n    module.hot.accept(4, function () { return renderApp(__webpack_require__(4).default); });\r\n}\r\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/index.tsx\n// module id = 13\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/index.tsx?")},3:function(module,exports,__webpack_require__){"use strict";eval('\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nvar font_1 = __webpack_require__(49);\r\nvar form_1 = __webpack_require__(50);\r\nvar positioning_1 = __webpack_require__(51);\r\nexports.default = {\r\n    FONT: font_1.default,\r\n    FORM: form_1.default,\r\n    POSITIONING: positioning_1.default\r\n};\r\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/styles/index.ts\n// module id = 3\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/styles/index.ts?')},4:function(module,exports,__webpack_require__){"use strict";eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n            t[p] = s[p];\r\n    }\r\n    return t;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar React = __webpack_require__(0);\r\nvar aphrodite_1 = __webpack_require__(2);\r\nvar AnimatedNumber = __webpack_require__(45);\r\nvar styles_1 = __webpack_require__(3);\r\nvar Wheel_1 = __webpack_require__(52);\r\nvar Gear_1 = __webpack_require__(55);\r\nvar styles = aphrodite_1.StyleSheet.create({\r\n    page: {\r\n        marginTop: '5em',\r\n        display: 'block',\r\n        boxSizing: 'border-box',\r\n        height: 'calc(100vh - 5em)'\r\n    },\r\n    pageTitle: {\r\n        position: 'absolute',\r\n        left: '50%',\r\n        textAlign: 'center',\r\n        transform: 'translate(-50%,0)',\r\n        fontSize: '28px'\r\n    },\r\n    pageSubtitle: {\r\n        lineHeight: '2em',\r\n        fontSize: '18px'\r\n    },\r\n    developmentContainer: __assign({}, styles_1.default.FONT.BODY_SMALL, styles_1.default.POSITIONING.CONTAINER, { width: '50%', height: '100%' }),\r\n    content: styles_1.default.POSITIONING.CENTERED_CONTENT,\r\n    row: {\r\n        display: 'block',\r\n        height: '50%',\r\n        position: 'relative',\r\n        ':after': {\r\n            clear: 'both'\r\n        }\r\n    }\r\n});\r\nvar DEFAULT_ANIMATED_NUMBER_PROPS = {\r\n    duration: 250,\r\n    formatValue: function (n) { return n.toFixed(2); },\r\n    stepPrecision: 2,\r\n    frameStyle: function (percent) {\r\n        var percentLeft = (100 - percent) * 0.01;\r\n        var textRGB = 255 * percentLeft;\r\n        return {\r\n            verticalAlign: 'top',\r\n            fontSize: '2em',\r\n            backgroundColor: \"rgba(0,0,0,\" + percentLeft + \")\",\r\n            color: \"rgb(\" + textRGB + \",\" + textRGB + \",\" + textRGB + \")\"\r\n        };\r\n    }\r\n};\r\nvar DrivetrainPage = (function (_super) {\r\n    __extends(DrivetrainPage, _super);\r\n    function DrivetrainPage() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.cadence = 80;\r\n        _this.state = {\r\n            development: 0,\r\n            hourDistance: 0,\r\n            hourUnit: '--',\r\n            unit: '--'\r\n        };\r\n        _this.onRenderUpdateChild = function () {\r\n            if (_this.wheel && _this.gear) {\r\n                var _a = _this.wheel.state, circumference = _a.circumference, unit = _a.unit;\r\n                var FACTOR_UNIT = unit === 'cm' ? 1 / 100 : 1 / 12;\r\n                var isMetric = unit === 'cm';\r\n                unit = isMetric ? 'meters' : 'feet';\r\n                var hourUnit = isMetric ? 'km' : 'mi';\r\n                var hourFactor = isMetric ? 1 / 1000 : 1 / 5280;\r\n                var development = FACTOR_UNIT * circumference * _this.gear.state.ratio;\r\n                _this.setState({\r\n                    unit: unit,\r\n                    development: development,\r\n                    hourDistance: development * _this.cadence * 60 * hourFactor,\r\n                    hourUnit: hourUnit\r\n                });\r\n            }\r\n        };\r\n        _this.renderClassNames = function () { return ({\r\n            page: aphrodite_1.css(styles.page),\r\n            pageTitle: aphrodite_1.css(styles.pageTitle),\r\n            pageSubtitle: aphrodite_1.css(styles.pageSubtitle),\r\n            developmentContainer: aphrodite_1.css(styles.developmentContainer),\r\n            content: aphrodite_1.css(styles.content),\r\n            row: aphrodite_1.css(styles.row)\r\n        }); };\r\n        return _this;\r\n    }\r\n    DrivetrainPage.prototype.componentDidMount = function () {\r\n        this.onRenderUpdateChild();\r\n    };\r\n    DrivetrainPage.prototype.render = function () {\r\n        var _this = this;\r\n        var _a = this.state, development = _a.development, unit = _a.unit, hourDistance = _a.hourDistance, hourUnit = _a.hourUnit;\r\n        var className = this.renderClassNames();\r\n        return (React.createElement(\"div\", { className: className.page },\r\n            React.createElement(\"div\", { className: className.pageTitle },\r\n                React.createElement(\"a\", { href: \"https://bicycles.stackexchange.com/search?q=development\", target: \"_blank\" }, \"Development\"),\r\n                \"\\u00A0Calculator\",\r\n                React.createElement(\"div\", { className: className.pageSubtitle }, \"How far will your gearing take you?\")),\r\n            React.createElement(Gear_1.default, { onRenderUpdate: this.onRenderUpdateChild, ref: function (el) { return _this.gear = el; } }),\r\n            React.createElement(\"div\", { className: className.row },\r\n                React.createElement(Wheel_1.default, { diameter: 34.9, unit: 'cm', onRenderUpdate: this.onRenderUpdateChild, ref: function (el) { return _this.wheel = el; } }),\r\n                React.createElement(\"div\", { className: className.developmentContainer },\r\n                    React.createElement(\"div\", { className: className.content, style: { textAlign: 'left' } },\r\n                        React.createElement(AnimatedNumber, __assign({}, DEFAULT_ANIMATED_NUMBER_PROPS, { value: this.gear && this.gear.state.ratio })),\r\n                        \" gear ratio\",\r\n                        React.createElement(\"br\", null),\r\n                        React.createElement(AnimatedNumber, __assign({}, DEFAULT_ANIMATED_NUMBER_PROPS, { value: development })),\r\n                        \" \",\r\n                        unit,\r\n                        \" per revolution\",\r\n                        React.createElement(\"br\", null),\r\n                        React.createElement(\"br\", null),\r\n                        React.createElement(AnimatedNumber, __assign({}, DEFAULT_ANIMATED_NUMBER_PROPS, { value: hourDistance })),\r\n                        \" \",\r\n                        hourUnit,\r\n                        \"/h @ \",\r\n                        this.cadence,\r\n                        \" RPM\")))));\r\n    };\r\n    return DrivetrainPage;\r\n}(React.PureComponent));\r\nexports.default = DrivetrainPage;\r\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/DrivetrainPage/index.tsx\n// module id = 4\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/DrivetrainPage/index.tsx?")},49:function(module,exports,__webpack_require__){"use strict";eval("\r\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n            t[p] = s[p];\r\n    }\r\n    return t;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar LATO = {\r\n    fontFamily: 'Lato, sans-serif',\r\n    fontWeight: 300\r\n};\r\nvar BODY_SMALL = __assign({}, LATO, { fontSize: '16px' });\r\nexports.default = {\r\n    BODY_SMALL: BODY_SMALL\r\n};\r\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/styles/font.ts\n// module id = 49\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/styles/font.ts?")},50:function(module,exports,__webpack_require__){"use strict";eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar FIELD = {\r\n    appearance: 'none',\r\n    background: 'transparent',\r\n    border: 'none',\r\n    borderRadius: 0,\r\n    borderBottom: '1px solid gray',\r\n    textAlign: 'right',\r\n    marginLeft: '0.5em'\r\n};\r\nexports.default = {\r\n    FIELD: FIELD\r\n};\r\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/styles/form.ts\n// module id = 50\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/styles/form.ts?")},51:function(module,exports,__webpack_require__){"use strict";eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar CONTAINER = {\r\n    display: 'inline-block',\r\n    boxSizing: 'border-box',\r\n    float: 'left',\r\n    position: 'relative'\r\n};\r\nvar CENTERED_CONTENT = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    textAlign: 'center'\r\n};\r\nvar FILL_PARENT = {\r\n    position: 'absolute',\r\n    top: 0,\r\n    left: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n    display: 'block',\r\n    boxSizing: 'border-box'\r\n};\r\nexports.default = {\r\n    CENTERED_CONTENT: CENTERED_CONTENT,\r\n    CONTAINER: CONTAINER,\r\n    FILL_PARENT: FILL_PARENT\r\n};\r\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/styles/positioning.ts\n// module id = 51\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/styles/positioning.ts?")},52:function(module,exports,__webpack_require__){"use strict";eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n            t[p] = s[p];\r\n    }\r\n    return t;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar React = __webpack_require__(0);\r\nvar aphrodite_1 = __webpack_require__(2);\r\nvar styles_1 = __webpack_require__(3);\r\nvar RimSize_1 = __webpack_require__(53);\r\nvar CONVERT_TO = {\r\n    in: 1 / 2.54,\r\n    cm: 2.54\r\n};\r\nvar UNITS = {\r\n    'inches': 'in',\r\n    'cm': 'cm'\r\n};\r\nvar styles = aphrodite_1.StyleSheet.create({\r\n    container: {\r\n        height: '100%',\r\n        display: 'inline-block',\r\n        boxSizing: 'border-box',\r\n        width: '50%',\r\n        float: 'left',\r\n        position: 'relative'\r\n    },\r\n    field: __assign({}, styles_1.default.FONT.BODY_SMALL, { fontSize: '2em', textAlign: 'right', border: 'none', borderBottom: '1px solid rgba(0,0,0,0.2)', borderRadius: 0, outline: 'none' }),\r\n    unitField: __assign({}, styles_1.default.FONT.BODY_SMALL, { fontSize: '1em', verticalAlign: 'top', border: 'none', borderBottom: '1px solid rgba(0,0,0,0.2)', appearance: 'none', borderRadius: 0, position: 'relative', background: 'none', outline: 'none', marginLeft: '0.25em' }),\r\n    content: {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        textAlign: 'center'\r\n    },\r\n    heading: {\r\n        fontSize: '1.2em'\r\n    }\r\n});\r\nvar Wheel = (function (_super) {\r\n    __extends(Wheel, _super);\r\n    function Wheel() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.state = {\r\n            diameter: _this.props.diameter,\r\n            unit: _this.props.unit,\r\n            circumference: 0\r\n        };\r\n        _this.calculateCircumference = function (diameter) {\r\n            _this.setState({ circumference: parseFloat((Math.PI * diameter).toFixed(2)) });\r\n        };\r\n        _this.setUnit = function (unit) { return _this.setState({ unit: unit }); };\r\n        _this.setDiameter = function (diameter) {\r\n            _this.calculateCircumference(diameter);\r\n            _this.setState({ diameter: diameter });\r\n        };\r\n        _this.onChangeUnit = function (e) {\r\n            var unit = e.currentTarget.value;\r\n            _this.setUnit(unit);\r\n            var diameter = _this.state.diameter;\r\n            var sigDigs2 = Math.round(diameter * CONVERT_TO[unit] * 100) / 100;\r\n            _this.setDiameter(sigDigs2);\r\n        };\r\n        _this.onChangeDiameter = function (e) {\r\n            _this.rimSize.setToCustomType();\r\n            _this.setDiameter(parseFloat(e.currentTarget.innerText));\r\n        };\r\n        _this.onChangeRim = function () {\r\n            if (_this.rimSize.state.diameterCM !== null) {\r\n                _this.setUnit('cm');\r\n                _this.setDiameter(_this.rimSize.state.diameterCM);\r\n            }\r\n        };\r\n        _this.renderClassNames = function () { return ({\r\n            container: aphrodite_1.css(styles.container),\r\n            field: aphrodite_1.css(styles.field),\r\n            unitField: aphrodite_1.css(styles.unitField),\r\n            content: aphrodite_1.css(styles.content),\r\n            heading: aphrodite_1.css(styles.heading)\r\n        }); };\r\n        return _this;\r\n    }\r\n    Wheel.prototype.componentWillMount = function () {\r\n        this.calculateCircumference(this.state.diameter);\r\n    };\r\n    Wheel.prototype.componentDidUpdate = function () {\r\n        this.props.onRenderUpdate && this.props.onRenderUpdate();\r\n    };\r\n    Wheel.prototype.render = function () {\r\n        var _this = this;\r\n        var className = this.renderClassNames();\r\n        var _a = this.state, diameter = _a.diameter, unit = _a.unit;\r\n        var optionsUnits = Object.keys(UNITS)\r\n            .map(function (key) { return React.createElement(\"option\", { key: key, value: UNITS[key] }, key); });\r\n        return (React.createElement(\"div\", { className: className.container },\r\n            React.createElement(\"div\", { className: className.content },\r\n                React.createElement(\"div\", { className: className.heading }, \"Wheel type\"),\r\n                React.createElement(RimSize_1.default, { onChangeRim: this.onChangeRim, ref: function (el) { return _this.rimSize = el; } }),\r\n                React.createElement(\"br\", null),\r\n                React.createElement(\"div\", { className: className.heading }, \"Wheel diameter\"),\r\n                React.createElement(\"span\", { contentEditable: true, onBlur: this.onChangeDiameter, className: className.field }, diameter),\r\n                React.createElement(\"select\", { onChange: this.onChangeUnit, value: unit, className: className.unitField }, optionsUnits))));\r\n    };\r\n    return Wheel;\r\n}(React.PureComponent));\r\nexports.default = Wheel;\r\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/DrivetrainPage/Wheel.tsx\n// module id = 52\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/DrivetrainPage/Wheel.tsx?")},53:function(module,exports,__webpack_require__){"use strict";eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n            t[p] = s[p];\r\n    }\r\n    return t;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar React = __webpack_require__(0);\r\nvar aphrodite_1 = __webpack_require__(2);\r\nvar styles_1 = __webpack_require__(3);\r\nvar audio_1 = __webpack_require__(12);\r\nvar styles = aphrodite_1.StyleSheet.create({\r\n    field: {\r\n        appearance: 'none',\r\n        opacity: 0,\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n        width: '100%',\r\n        height: '100%'\r\n    },\r\n    rimName: __assign({}, styles_1.default.FONT.BODY_SMALL, { position: 'relative', fontSize: '2em', fontWeight: 'bold', borderBottom: '1px solid rgba(0,0,0,0.2)', marginBottom: '0.5em' })\r\n});\r\nvar RIM_SIZES = {\r\n    'custom': 0,\r\n    'Razor Scooter (100mm)': 10.0,\r\n    'Wheelchair Castor (137mm)': 13.7,\r\n    'Wheelchair Castor (152mm)': 15.2,\r\n    '6 inch Trolley (150mm)': 15.0,\r\n    '8 inch Scooter (200mm)': 20.0,\r\n    '12 inch Child (ISO 302)': 30.2,\r\n    '16 inch Brompton (ISO 349)': 34.9,\r\n    '18 inch Birdy (ISO 355)': 35.5,\r\n    '17 inch Moulton AM (ISO 369)': 36.9,\r\n    '20 inch BMX (ISO 406)': 40.6,\r\n    '20 inch Schwinn (ISO 419)': 419,\r\n    '20 inch Recumbent (ISO 451)': 45.1,\r\n    '24 inch MTB (ISO 507)': 50.7,\r\n    '24 inch Terry (ISO 520)': 52.0,\r\n    '24 inch E6 (ISO 540)': 54.0,\r\n    '24 inch S5 (ISO 547)': 54.7,\r\n    '26 inch MTB (ISO 559)': 55.9,\r\n    '27 inch (ISO 630)': 63.0,\r\n    '27 inch 650b (ISO 584)': 58.4,\r\n    '28 inch 650c (ISO 571)': 57.1,\r\n    '28 inch (ISO 635)': 63.5,\r\n    '29 inch 700c (ISO 622)': 62.2\r\n};\r\nvar RimSize = (function (_super) {\r\n    __extends(RimSize, _super);\r\n    function RimSize() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.state = {\r\n            diameterCM: 0,\r\n            name: 'custom'\r\n        };\r\n        _this.setToCustomType = function () { return _this.setState({ diameterCM: 0, name: 'custom' }); };\r\n        _this.onChange = function (e) {\r\n            var value = e.currentTarget.value;\r\n            _this.setState({\r\n                diameterCM: value,\r\n                name: e.currentTarget.querySelector(\"option[value=\\\"\" + value + \"\\\"]\").innerHTML\r\n            });\r\n            audio_1.playSound('delete.mp3');\r\n        };\r\n        _this.renderClassNames = function () { return ({\r\n            field: aphrodite_1.css(styles.field),\r\n            rimName: aphrodite_1.css(styles.rimName)\r\n        }); };\r\n        return _this;\r\n    }\r\n    RimSize.prototype.componentDidUpdate = function () {\r\n        if (this.state.name !== 'custom') {\r\n            this.props.onChangeRim && this.props.onChangeRim();\r\n        }\r\n    };\r\n    RimSize.prototype.render = function () {\r\n        var _a = this.renderClassNames(), field = _a.field, rimName = _a.rimName;\r\n        var _b = this.state, diameterCM = _b.diameterCM, name = _b.name;\r\n        var options = Object.keys(RIM_SIZES)\r\n            .map(function (name, key) { return React.createElement(\"option\", { value: RIM_SIZES[name], key: key }, name); });\r\n        return (React.createElement(\"div\", { className: rimName },\r\n            name,\r\n            React.createElement(\"select\", { onChange: this.onChange, className: field, value: diameterCM }, options)));\r\n    };\r\n    return RimSize;\r\n}(React.PureComponent));\r\nexports.default = RimSize;\r\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/DrivetrainPage/RimSize.tsx\n// module id = 53\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/DrivetrainPage/RimSize.tsx?")},54:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('Object.defineProperty(__webpack_exports__, "__esModule", { value: true });\n/* harmony default export */ __webpack_exports__["default"] = ({"delete.mp3":"","ratchet.mp3":"","rotate.mp3":"","snap.mp3":"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3K78rcKLP8/Euik5T328kc7g6bf4dzbDAMYzl9faBtPqlqVNWJRa1Flr2X/feL5y51Kdp7SFRqna209FRMBKwMP5PMEgmVUnwPL68mpoefuXd/5bjntkmFDfeR/78Ur26K/LFNH4/////////////////////////////////////8Ke32NzzVNFq6k6LQkDiYXBKUsc2AIlMlqmmjzMwdo3bcLh2ampFJvHEEGjemMIBF0qBDCgWlCAweuADrBigaNACSHFHmWBF9EiS0yiQqEoWQUyEJiRb/NxVzWYeplLn1CBBixpkSaZgv/7wMTLgCYWD1H5vKIE70IsfzWgCACyhhzd4lP1m8Yk5LKW/EQCJhAhirCoYf1uT60VM3B7JewK5EGYlrC56IAUAPvAMTcKRWY/Pvy6Pc4rQwLTNo6kfWFehQOCFQNizrYUMO447ijlTMlh6aufIkJSTzAY42R/mLKYNjLkRcDA4y4120+sgnfu38SyVqIPDAs1ATEn3o1ysTagz+SrRTDTra411K9ERgDdWeuXKa9a3TY5O0/UujWfKCHnZl0NXefS7s1abOpLY7nYuc////////////////7q13///////////////+99NlWLzby4pnqXh2zXuW2OMpyRzjAgwIAPZOBh4yZ4iSIVBIgyZkxysw7AxwpiZt4ZWbLphCYmLZUEzmmyX/SWWcAgQsABAjNiPAxFJACgFh+H1JMzYaW0NJIRoiEIZAAr4qsXAKxF+O+scGKDDaEhCUNEARtrTMneYjRvBLtuJLkN0hS+aD7dy7j7yytTyh25ZHYKcRkmNI2MmlHSDCBLkhcBdr8bZ07UNVHSvU9enn7Dj5y4HCl7kAiqA4EgESqgot5Xh1wYtDt2bhl+YzKZfflFi7L85fhaVtZc0pIdY7d3glSR0xEn1dXCYh6kl1azSzjDHIdSKy/Kku5WKljc3GwwMswYJKGooM4qNLKH4QvLyL9YMWgfWdrP7S4y3k07WV/mq/f/8P//////////////+kv/ds//qrcnqx5SndnJTdkkUSaYUaAogYKPGHwIROAQZMeCiI2UCMGHjEikiHWqlBCYgPriHQYLgYJABYCFCKgyQNi0aQmphQwqw5i9gFarhsTCO0vxBB2nElDQYSxlvFtPEli0Z64JekUgF+aDcfpjolWUgMxsw+YjIiTaTj96cL5cup1+vszEuQ1HHSz3Li2untFk/XKRwdolvYXODA02srCcC4YXTctLDHi8yuhI2A5QEROeSmqoF0q7wdZU//ugxPgAJtnba/mskgQkwet/NvAAt1I4RJY0iqc03M4PXipiKFjTkQ9HrW+bXqlcZoTxhUMr1HvOmmLMsO24LLDQpikmlngvNTRXNzbNf//////////////////////////+kDTP3rumR5ZUJDO+xpwshMNhQMw0rRVGS8wckMehzAQw20wDAgWCTBS8xQINQfjYA4RgGYNFltmGqeu7LgaGAsjJZUuAEB9ecZE05BKAppeRKioZjhs6bqpky5gQoCqulo6Q02IxTVDTVbsX9VtR5T2h5RdAtakRa7KYYjlKpoIUa1yhlsegZg0tTvjbN1HwhdgqAdMNLgvIXQpIZpXBzbi0l2Z99KVxFJQayJri6FzFoH5EIZlhufWpq9atnHYg41NJXdh5/qszBdRY8vfRAGhvTO/LJWylm19/tUsohT7ZymVQ9ZzdCIP3F4+r+LRmUgYBNZnKP6ajGU11iOw8iCdPtMRPpFDN2ZbEqd9YxWuwbct8xwpX+eerWu1o/Os9hqXd/Lk53mf///////////////l+u////////////////5alWan/btCmYAAAALBGmkcAQEFQMEAqd1ZR1US2i/3WfOC1WVQEBkQCISoVSEzQhKC4hKoT0zNwVjkcuSizWSztWqzH7OFftTti3VG0oRg0itnPfNLIc8/ONL1lXkt3cxP31XIb//ugxNKAKH4Rdfm8kIpuLaq7spAASRt5jLKi7KO45OjiyzeIs0M0dQD0xTFxEPVT/1N/8YtMsxIXKrESpCZzSw9GiJ7miUFkpMuU7oEawlX+27x0MQbWAi3YzExBYww4vuIQvsmKkMv5P17WwOYqs+7vTkCRKtyhYbeFFakycuXZFBu5xbQHNeUQk0qBS95at76YSrUt7s5ET3yUONIhFOMIgShQkVNuP25quadaIbkabc8Xd06DahjvfJVxyt1V1UN5X/6qbtLbduIAtMxvVQucqJrVml3A1V39nblurIbabCLj/COLvDhCEAcYtqgOQvRmQWdqQt0R9YCzV3Jx1opFERM4hTUGlSKLKqbl04SLDlSkjTVEobizyUnmsMWc0kQMId6hZNyZNqXn/anjz21FU52aBZUJ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ZZ/lPPSeKOAFmAGwxcdCx/+R6nio2bGyfKjEokEmgupX3g6V++Jq+ukk+z0qnVvS1Vqur//1qDSOjzf/ub+rR/1xqFiVVLl0J/WhmxIAAAWQcH/+EQA/+xsUAxuRENBNByB3E2h/Os+Ib42zkYJZhY7mle5wrnl//91spVSD3qpUn/1N6nRDqE6qf/f/2f2f/pyv0cXYfa1oD/6lmQ1ifAr6kR1ITU0E+yv9bazUgu05ASkxyFW3IXrglNbcCn0/1b//+1DE6QBLIPkp6CFR4W0e5PTStjyEgRfp/nf///913VNsXt7aKGZmV1BYfb1kgB5l/Hno8eagIYckRTk/U4P650ICJDQ869wGBzvSInXcswfERNAiDAxwZgZmcifJ92XR9/39X+/V+/1JBMh8EEmvqkN2a28e+jvqkEm6mKa4+kN/8ymRXJMs0tye99sAABUEWaCwa1UKio0IRbQjpNWsW0sLQVDKEyRBYmbIgSDTVxjlRQ4siRNWhDolDQiBksDVuIgaUHf//8sd//////////tQxOwAyvj7J6ik72FAniTQ1DZk/g1ztdVMQU1FMy45OS41VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVTEFNRTMuOTkuNVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVf/7MMT1ggjc7ynoDbTg/J4ktNCrGFVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVf/7UMT2AAwo7yXnjbThM4tj9JelSFVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVX/+xDE1gPAAAH+AAAAIAAANIAAAARVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVQ=="});\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/sounds.js\n// module id = 54\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/sounds.js?')},55:function(module,exports,__webpack_require__){"use strict";eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n            t[p] = s[p];\r\n    }\r\n    return t;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar React = __webpack_require__(0);\r\nvar aphrodite_1 = __webpack_require__(2);\r\nvar styles_1 = __webpack_require__(3);\r\nvar audio_1 = __webpack_require__(12);\r\nvar styles = aphrodite_1.StyleSheet.create({\r\n    container: __assign({}, styles_1.default.FONT.BODY_SMALL, { position: 'relative', height: '50%', ':after': {\r\n            clear: 'both'\r\n        } }),\r\n    field: {\r\n        fontSize: '2em',\r\n        verticalAlign: 'top'\r\n    },\r\n    halfWidth: {\r\n        width: '50%',\r\n        height: '100%',\r\n        display: 'inline-block',\r\n        float: 'left',\r\n        position: 'relative'\r\n    },\r\n    teethCount: {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)'\r\n    },\r\n    heading: {\r\n        fontSize: '1.2em'\r\n    },\r\n    modifiers: {\r\n        position: 'relative',\r\n        ':not(:empty) > button': {\r\n            height: '2em',\r\n            width: '50%',\r\n            fontSize: '1em',\r\n            background: 'rgb(32,32,32)',\r\n            color: 'rgb(255,255,255)',\r\n            border: 'none'\r\n        }\r\n    },\r\n    countDisplay: {\r\n        textAlign: 'center',\r\n        margin: '0.5em 0'\r\n    },\r\n    ratioDisplay: {\r\n        position: 'absolute',\r\n        bottom: '0',\r\n        left: '50%',\r\n        transform: 'translateX(-50%)'\r\n    }\r\n});\r\nvar Gear = (function (_super) {\r\n    __extends(Gear, _super);\r\n    function Gear() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.state = {\r\n            teethCountFront: 32,\r\n            teethCountRear: 14,\r\n            ratio: 32 / 14\r\n        };\r\n        _this.calculateRatio = function (_a) {\r\n            var teethCountFront = _a.teethCountFront, teethCountRear = _a.teethCountRear;\r\n            _this.setState({ ratio: teethCountFront / teethCountRear });\r\n        };\r\n        _this.onChangeTeethCountFront = function (e) {\r\n            var teethCountFront = e.target.value;\r\n            if (teethCountFront > 5) {\r\n                _this.setState({ teethCountFront: teethCountFront });\r\n                _this.calculateRatio({ teethCountRear: _this.state.teethCountRear, teethCountFront: teethCountFront });\r\n            }\r\n        };\r\n        _this.onAddTeethCountFront = function () { return _this.onChangeTeethCountFront({ target: { value: _this.state.teethCountFront + 1 } }); };\r\n        _this.onRemoveTeethCountFront = function () { return _this.onChangeTeethCountFront({ target: { value: _this.state.teethCountFront - 1 } }); };\r\n        _this.onChangeTeethCountRear = function (e) {\r\n            var teethCountRear = e.target.value;\r\n            if (teethCountRear > 5) {\r\n                _this.setState({ teethCountRear: teethCountRear });\r\n                _this.calculateRatio({ teethCountFront: _this.state.teethCountFront, teethCountRear: teethCountRear });\r\n            }\r\n        };\r\n        _this.onAddTeethCountRear = function () { return _this.onChangeTeethCountRear({ target: { value: _this.state.teethCountRear + 1 } }); };\r\n        _this.onRemoveTeethCountRear = function () { return _this.onChangeTeethCountRear({ target: { value: _this.state.teethCountRear - 1 } }); };\r\n        _this.renderClassNames = function () { return ({\r\n            container: aphrodite_1.css(styles.container),\r\n            field: aphrodite_1.css(styles.field),\r\n            halfWidth: aphrodite_1.css(styles.halfWidth),\r\n            teethCount: aphrodite_1.css(styles.teethCount),\r\n            heading: aphrodite_1.css(styles.heading),\r\n            modifiers: aphrodite_1.css(styles.modifiers),\r\n            countDisplay: aphrodite_1.css(styles.countDisplay),\r\n            ratioDisplay: aphrodite_1.css(styles.ratioDisplay)\r\n        }); };\r\n        return _this;\r\n    }\r\n    Gear.prototype.componentDidUpdate = function () {\r\n        this.props.onRenderUpdate && this.props.onRenderUpdate();\r\n        audio_1.playSound('ratchet.mp3');\r\n    };\r\n    Gear.prototype.render = function () {\r\n        var _a = this.renderClassNames(), container = _a.container, field = _a.field, halfWidth = _a.halfWidth, teethCount = _a.teethCount, countDisplay = _a.countDisplay, ratioDisplay = _a.ratioDisplay, heading = _a.heading, modifiers = _a.modifiers;\r\n        var _b = this.state, teethCountFront = _b.teethCountFront, teethCountRear = _b.teethCountRear;\r\n        return (React.createElement(\"div\", { className: container },\r\n            React.createElement(\"div\", { className: halfWidth },\r\n                React.createElement(\"div\", { className: teethCount },\r\n                    React.createElement(\"div\", { className: heading }, \"Front chainring\"),\r\n                    React.createElement(\"div\", { className: countDisplay },\r\n                        React.createElement(\"span\", { className: field }, teethCountFront),\r\n                        \" teeth\"),\r\n                    React.createElement(\"div\", { className: modifiers },\r\n                        React.createElement(\"button\", { onClick: this.onAddTeethCountFront }, \"+\"),\r\n                        React.createElement(\"button\", { onClick: this.onRemoveTeethCountFront }, \"-\")))),\r\n            React.createElement(\"div\", { className: halfWidth },\r\n                React.createElement(\"div\", { className: teethCount },\r\n                    React.createElement(\"div\", { className: heading }, \"Rear sprocket\"),\r\n                    React.createElement(\"div\", { className: countDisplay },\r\n                        React.createElement(\"span\", { className: field }, teethCountRear),\r\n                        \" teeth\"),\r\n                    React.createElement(\"div\", { className: modifiers },\r\n                        React.createElement(\"button\", { onClick: this.onAddTeethCountRear }, \"+\"),\r\n                        React.createElement(\"button\", { onClick: this.onRemoveTeethCountRear }, \"-\")))),\r\n            React.createElement(\"div\", { className: ratioDisplay })));\r\n    };\r\n    return Gear;\r\n}(React.PureComponent));\r\nexports.default = Gear;\r\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/DrivetrainPage/Gear.tsx\n// module id = 55\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/DrivetrainPage/Gear.tsx?")}},[13]);